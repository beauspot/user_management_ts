openapi: 3.0.0
info:
  title: Jite TS-Version
  description: This is the user management service in Typescript(nodejs/express) using mongodb as the database and mongoose as the ODM
  contact:
    name: Beau Iyere
    email: beauspot@outlook.com
  version: '2.0'
servers:
- url: http://localhost:5051
  variables: {}
paths:
  /api/auth/signup:
    post:
      tags:
      - Authentication
      summary: signup-user
      operationId: signup-user
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/signup-user-request'
              - example:
                  username: beauspot
                  password: '@b1058019'
            example:
              username: beauspot
              password: '@b1058019'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /api/auth/login:
    post:
      tags:
      - Authentication
      summary: Login User
      operationId: LoginUser
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/LoginUserRequest'
              - example:
                  username: beauspot
                  password: '@b1058019'
            example:
              username: beauspot
              password: '@b1058019'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /api/dashboard:
    get:
      tags:
      - Dashboard
      summary: dashboard
      operationId: dashboard
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
  /:
    get:
      tags:
      - Index Endpoint
      summary: index Page.
      operationId: indexPage.
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
components:
  schemas:
    signup-user-request:
      title: signup-user-request
      required:
      - username
      - password
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      example:
        username: beauspot
        password: '@b1058019'
    LoginUserRequest:
      title: LoginUserRequest
      required:
      - username
      - password
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      example:
        username: beauspot
        password: '@b1058019'
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security: []
tags:
- name: Authentication
- name: Dashboard
- name: Index Route
  description: ''
- name: Index Endpoint
  description: ''
